---
import Layout from "../../layouts/Layout.astro";
import MantenanceLayout from '@/components/event/MantenanceLayout'


import { getEventos} from '@/api/eventos';

let eventos = await getEventos();
if(eventos.error){
    eventos = [];
}



const messages = {
    delete: "¿Está seguro que desea eliminar este evento?",
    pending: "Eliminando evento...",
    success: "Evento eliminado correctamente",
    error: "Error al eliminar el evento"
}

const headers = [
    { name: "Titulo", key: 'nombreEvento'},
	{ name: "Inicio", key: 'inicio'},
    { name: "Fin", key: 'fin'},
    { name: "Horario", key: 'horario'},
    { name: "Lugar", key: 'lugar'}
]

const formatDate = (date) => {
    const d = new Date(date);
    return d.toLocaleDateString(
        "es-ES",
        { year: "numeric", month: "long", day: "numeric" }
    )
}

const formatTime = (date) => {
    const d = new Date(date);
    return d.toLocaleTimeString(
        "es-ES",
        { hour: "numeric", minute: "numeric" }
    )
}
const eventoData = eventos.map((evento) => {
    return {
        id: evento._id,
        nombreEvento: evento.nombreEvento,
		inicio: formatDate(evento.fechaInicio) ,
        fin: formatDate(evento.fechaFinal),
        horario: `${formatTime(evento.fechaInicio)} - ${formatTime(evento.fechaFinal)}`,
        lugar: evento.lugar
    }
})

---

<Layout title="Eventos - Admin">
    <main>
        <MantenanceLayout 
            title="Mantenimiento de Eventos"
            messages={messages}
            headers={headers}
            data={eventoData}
            client:load
            client:only
        />
    </main>
</Layout>

<style>
    main {
        flex: 1;
        height: 100%;
        width: 100%;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: flex-start;
        gap: 1rem;
        overflow-y: auto;
    }
</style>